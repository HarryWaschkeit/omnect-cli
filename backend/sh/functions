#!/bin/bash

# for now we use static lookup for partion numbers (may break if we have
# systems whith different partition schemas, e.g. dos vs gpt)
boot=1
rootA=2
factory=5
cert=6

function d_echo() {
    if [ ! -z ${DEBUG} ]; then
        echo "${@}"
    fi
}

function error() {
    echo "error: ${@}" 1>&2
}

function uuid_gen() {
    uuid=$(uuidgen)
    d_echo uuid=${uuid}
    mkdir -p /tmp/${uuid}
}

function read_in_partition() {
    d_echo read_in_partition ${p}
    part_offset=($(fdisk -l -o Device,Start,End ${w} | grep ${w}${!p} | awk '{print $2 " " $3}'))
    d_echo "dd if=${w} of=/tmp/${uuid}/${p}.img bs=512 skip=${part_offset[0]} count=${part_offset[1]}"
    dd if=${w} of=/tmp/${uuid}/${p}.img bs=512 skip=${part_offset[0]} count=${part_offset[1]} 2>&1
    sync
}

function write_back_partition() {
    d_echo write_back_partition ${p}
    d_echo "dd if=/tmp/${uuid}/${p}.img of=${w} bs=512 seek=${part_offset[0]} count=${part_offset[1]} conv=notrunc"
    dd if=/tmp/${uuid}/${p}.img of=${w} bs=512 seek=${part_offset[0]} count=${part_offset[1]} conv=notrunc 2>&1
    sync
}

function read_in_rootA() {
    d_echo read_in_rootA
    local _part_offset=($(fdisk -l ${w} | grep ${w}${rootA} | awk '{print $2 " " $4}'))
    d_echo "dd if=${w} of=/tmp/${uuid}/rootA.img bs=512 skip=${_part_offset[0]} count=${_part_offset[1]}"
    dd if=${w} of=/tmp/${uuid}/rootA.img bs=512 skip=${_part_offset[0]} count=${_part_offset[1]} 2>&1
    sync
}

function config_hostname () {
    d_echo config_hostname
    hostname=$(grep "^hostname" ${1})

    # possibly remove inline comments
    hostname=${hostname%%\#*}

    hostname=$(echo ${hostname} | cut -d "=" -f2 | xargs)
    echo "${hostname}" > /tmp/${uuid}/hostname

    read_in_rootA
    e2cp /tmp/${uuid}/rootA.img:/etc/hosts /tmp/${uuid}/hosts
    sed -i "s/^127.0.1.1\(.*\)/127.0.1.1 ${hostname}/" /tmp/${uuid}/hosts

    if [ "${p}" != "factory" ]; then
        error "can not configure hostname"
        exit 1
    fi

    e2mkdir /tmp/${uuid}/${p}.img:/etc
    e2cp /tmp/${uuid}/hostname /tmp/${uuid}/${p}.img:/etc/hostname
    e2cp /tmp/${uuid}/hosts /tmp/${uuid}/${p}.img:/etc/hosts
}

function copy_identity_config() {
    if [ "${p}" != "factory" ]; then
        error "can not copy identity config"
        exit 1
    fi
    d_echo e2cp ${c} /tmp/${uuid}/${p}.img:/etc/aziot/config.toml
    e2mkdir /tmp/${uuid}/${p}.img:/etc/aziot
    e2cp ${c} /tmp/${uuid}/${p}.img:/etc/aziot/config.toml
    config_hostname ${c}
}
